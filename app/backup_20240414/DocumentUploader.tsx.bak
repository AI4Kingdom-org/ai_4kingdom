'use client';

import { useState } from 'react';
import styles from './DocumentUploader.module.css';

interface DocumentUploaderProps {
  onUpload: (file: File) => Promise<void>;
  isProcessing: boolean;
}

export default function DocumentUploader({ onUpload, isProcessing }: DocumentUploaderProps) {
  const [error, setError] = useState('');

  const handleFileChange = async (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0];
    if (!file) return;

    try {
      await onUpload(file);
      // Clear the input after successful upload
      event.target.value = '';
    } catch (error) {
      setError(error instanceof Error ? error.message : '上传失败');
    }
  };

  return (
    <div className={styles.uploadContainer}>
      <div className={styles.uploadArea}>
        <input
          type="file"
          id="document-upload"
          className={styles.fileInput}
          onChange={handleFileChange}
          disabled={isProcessing}
          accept=".pdf,.doc,.docx,.txt"
        />
        <label htmlFor="document-upload" className={styles.uploadLabel}>
          {isProcessing ? (
            <span>处理中...</span>
          ) : (
            <span>点击或拖拽文件到此处上传</span>
          )}
        </label>
      </div>
      {error && <div className={styles.error}>{error}</div>}
    </div>
  );
} 